{"version":3,"file":"0.03bd5976dda748acce78.hot-update.js","sources":["webpack:///src/services/index.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant'\n\nconst insertGoogleScript = (documentRoot, id, handleClientLoad) => {\n    //Check if script already present\n    if (!documentRoot.getElementById(id)) {\n        const firstScriptTag = documentRoot.getElementsByTagName('script')[0];\n        const scriptTag = documentRoot.createElement('script');\n        scriptTag.async = 'async'\n        scriptTag.defer = 'defer'\n        scriptTag.id = id;\n        scriptTag.src = '//apis.google.com/js/client:platform.js';\n        scriptTag.onload = handleClientLoad;\n        firstScriptTag.parentNode.insertBefore(scriptTag, firstScriptTag);\n    }\n}\n\n// Loads auth2 library\nconst handleClientLoad = (initGoogleClient) => () =>\n    window.gapi.load('auth2', initGoogleClient);\n\nconst initGoogleClientAPI = (params, onUpdateSigninStatus, onInitFailure) => () => {\n\n    const auth2 = window.gapi.auth2\n    auth2.init(params).then(\n        () => {\n            // Listen for sign-in state changes.\n            auth2.getAuthInstance().isSignedIn.listen(onUpdateSigninStatus);\n            // Handle the initial sign-in state.\n            onUpdateSigninStatus(auth2.getAuthInstance().isSignedIn.get());\n        }, onInitFailure\n    )\n}\n\nconst makeGoogleParams = (props) => {\n    const { clientId, cookiePolicy, hostedDomain, fetchBasicProfile, redirectUri, uxMode, scope } = props\n\n    return ({\n        client_id: clientId,\n        cookiepolicy: cookiePolicy,\n        hosted_domain: hostedDomain,\n        fetch_basic_profile: fetchBasicProfile,\n        ux_mode: uxMode,\n        redirect_uri: redirectUri,\n        scope\n    })\n}\n\n//The function called if the Google libraries failed to load.\nconst initGoogleClientAPIFailure = err =>\n    console.error(err)\n\nclass GoogleAPI extends Component {\n\n    getChildContext() {\n        return {\n            reactGoogleApi: true\n        }\n    }\n\n    componentWillMount() {\n\n        const { children } = this.props\n\n        invariant(\n            children == null || React.Children.count(children) === 1,\n            'A <GoogleAPI> may have only one child element'\n        )\n    }\n\n    componentDidMount() {\n\n        const onUpdateSigninStatus = this.props.onUpdateSigninStatus ? this.props.onUpdateSigninStatus : f => f\n        const onInitFailure = this.props.onFailure ? this.props.onInitFailure : initGoogleClientAPIFailure\n\n        const params = makeGoogleParams(this.props)\n\n        const initClient = initGoogleClientAPI(params, onUpdateSigninStatus, onInitFailure)\n        const initGoogleApi = handleClientLoad(initClient)\n\n        insertGoogleScript(document, 'react-google-oauth-id', initGoogleApi);\n    }\n\n    render() {\n        const { children } = this.props\n        return children ? React.Children.only(children) : null\n    }\n}\n\nGoogleAPI.childContextTypes = {\n    reactGoogleApi: PropTypes.bool\n}\n\nGoogleAPI.propTypes = {\n    onUpdateSigninStatus: PropTypes.func,\n    onInitFailure: PropTypes.func,\n    clientId: PropTypes.string.isRequired,\n    scope: PropTypes.string,\n    cookiePolicy: PropTypes.string,\n    responseType: PropTypes.string,\n    fetchBasicProfile: PropTypes.bool,\n    prompt: PropTypes.string,\n    uxMode: PropTypes.string,\n    hostedDomain: PropTypes.string,\n    redirectUri: PropTypes.string,\n    children: PropTypes.node,\n};\n\nGoogleAPI.defaultProps = {\n    scope: '',\n    cookiePolicy: 'single_host_origin',\n    responseType: 'permission',\n    fetchBasicProfile: false,\n    prompt: '',\n    uxMode: 'prompt',\n};\n\nexport default GoogleAPI;\n\n\n// WEBPACK FOOTER //\n// src/services/index.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AACA;AAEA;AAIA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;;;;;;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;;;;A","sourceRoot":""}